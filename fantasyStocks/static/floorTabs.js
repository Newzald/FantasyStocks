"use strict"
var mainDiv;
var pk;
/*
 * These few lines register functions to run whenever a tab is clicked. It lets you have 
 * more than one, but it looks simple from the outsite. This pattern shows up elsewhere
 * in the JavaScript too. 
 */
var tabFunctions = [];
var onTabClick = function(func){
    tabFunctions.push(func)
};
var runTabFunctions = function(domObject) {
    for(var i = 0; i < tabFunctions.length; i++) {
        tabFunctions[i](domObject);
    } 
};

function setTradeBox($box, text)
{
    if(text === "" || /^\s*$/.test(text))
    {
        $box.html("<tr><td>There doesn't seem to be anything here...</td></tr>")
    }
    else
    {
        $box.html(text);
    }
}
$(document).ready(function(){
    /*
     * This file takes care of updating the trades and stock requests when you switch floors
     */
    mainDiv = $(".floorContainer");
    pk = $(".selected")[0].id;
    // NB floors is defined inline on the page. It's just a big HTML blob generated by Django that holds
    // the HTML that goes with each floor, which includes the scoreboard and the stockboard. The trades
    // and requests are separate. 
    mainDiv.html(floors[pk]);
    $(".tabs li").click(function() {
        if(this.className.indexOf("selected") == -1)
        {
            $(".tabs li").removeClass("selected");
            $(this).addClass("selected");
            mainDiv.html(floors[this.id]);
            runTabFunctions(this);
        }
    });
    // Simulating a click on the first tab will get everything in motion. 
    $($(".tabs li")[0]).removeClass("selected").click();
});
